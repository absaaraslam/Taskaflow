@model TaskManagementProject.Models.Category

@{
	ViewData["Title"] = "Category Management";
}

<style>

	#feedback-page {
		text-align: center;
	}

	#form-main {
		width: 100%;
		float: left;
		padding-top: 0px;
	}

	

	.feedback-input {
		color: #3c3c3c;
		font-family: Helvetica, Arial, sans-serif;
		font-weight: 500;
		font-size: 18px;
		border-radius: 0;
		line-height: 22px;
		background-color: #fbfbfb;
		padding: 13px 13px 13px 54px;
		margin-bottom: 10px;
		width: 100%;
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		-ms-box-sizing: border-box;
		box-sizing: border-box;
		border: 3px solid rgba(0,0,0,0);
	}

		.feedback-input:focus {
			background: #fff;
			box-shadow: 0;
			border: 3px solid #3498db;
			color: #3498db;
			outline: none;
			padding: 13px 13px 13px 54px;
		}

	.focused {
		color: #30aed6;
		border: #30aed6 solid 3px;
	}

	/* Icons ---------------------------------- */
	#name {
		background-image: url(http://rexkirby.com/kirbyandson/images/name.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

		#name:focus {
			background-image: url(http://rexkirby.com/kirbyandson/images/name.svg);
			background-size: 30px 30px;
			background-position: 8px 5px;
			background-position: 11px 8px;
			background-repeat: no-repeat;
		}

	#email {
		background-image: url(http://rexkirby.com/kirbyandson/images/email.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

		#email:focus {
			background-image: url(http://rexkirby.com/kirbyandson/images/email.svg);
			background-size: 30px 30px;
			background-position: 11px 8px;
			background-repeat: no-repeat;
		}

	#comment {
		background-image: url(http://rexkirby.com/kirbyandson/images/comment.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

	textarea {
		width: 100%;
		height: 150px;
		line-height: 150%;
		resize: vertical;
	}

		input:hover, textarea:hover,
		input:focus, textarea:focus {
			background-color: white;
		}

	#button-blue {
		font-family: 'Montserrat', Arial, Helvetica, sans-serif;
		float: left;
		width: 100%;
		border: #fbfbfb solid 4px;
		cursor: pointer;
		background-color: #3498db;
		color: white;
		font-size: 24px;
		padding-top: 22px;
		padding-bottom: 22px;
		-webkit-transition: all 0.3s;
		-moz-transition: all 0.3s;
		transition: all 0.3s;
		margin-top: -4px;
		font-weight: 700;
	}

		#button-blue:hover {
			background-color: rgba(0,0,0,0);
			color: #0493bd;
		}

	.submit:hover {
		color: #3498db;
	}

	.ease {
		width: 0px;
		height: 74px;
		background-color: #fbfbfb;
		-webkit-transition: .3s ease;
		-moz-transition: .3s ease;
		-o-transition: .3s ease;
		-ms-transition: .3s ease;
		transition: .3s ease;
	}

	.submit:hover .ease {
		width: 100%;
		background-color: white;
	}

	table {
		width: 100%;
		border-collapse: collapse; /* Remove table borders */
	}

	th,
	td {
		padding: 10px; /* Add padding to table cells */
		border: 1px solid #ddd; /* Light border for table cells */
	}

	th {
		background-color: #eee; /* Light gray background for table headers */
	}


</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" integrity="sha384-0svlQEgQWvbYfDjiLkEmqIkEY39G/SRYgqOMuhctppENwdtTdJzxuheGkooDZEO" crossorigin="anonymous">

<div class="container mt-5">
	<div class="row justify-content-center">
		<div class="col-md-8">
			<h1 class="display-4 text-primary text-center">Category Management</h1>
			<h2 class="h5 text-center text-white">Create Category</h2>

			<form id="createCategoryForm" class="mb-4">
				<div class="form-group">
					<label for="categoryName" class="form-label">Category Name:</label>
					<input type="text" class="form-control" id="categoryName" name="categoryName" placeholder="Enter Category Name" required>
				</div>
				<br />
				<button type="submit" class="btn btn-primary ">Add Category</button>
			</form>
			<br/>
			<br/>
			<br/>
			<h2 class="display-6 text-white text-opacity-50">List of Categories</h2>
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<th class="text-white"scope="col">ID</th>
						<th class="text-white" scope="col">Category Name</th>
					</tr>
				</thead>
				<tbody id="categoriesList">
				</tbody>
			</table>
		</div>
	</div>
</div>

@section Scripts {
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const categoryList = document.getElementById('categoriesList');

			fetch('http://localhost:5194/api/Categories/GetCategories')
				.then(response => response.json())
				.then(data => {
					data.forEach(category => {
						var newRow = "<tr>" +
							"<td class='text-white'>" + category.categoryId + "</td>" +
							"<td class='text-white'>" + category.categoryName + "</td>" +
							"</tr>";
						$("#categoriesList").append(newRow);
					});
				});

			const createCategoryForm = document.getElementById('createCategoryForm');
			createCategoryForm.addEventListener('submit', (event) => {
				event.preventDefault(); // Prevent default form submission
				console.log('aya')
				const categoryName = document.getElementById('categoryName').value;

				// Send a POST request to create the category
				fetch('http://localhost:5194/api/Categories/PostCategory', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ CategoryName: categoryName })
				})
					.then(response => response.json())
					.then(data => {
						// Handle successful creation or display any errors
						if (response.ok) {
							console.log("Category created successfully:", data);
							// Optionally, clear the form or update the UI
						} else {
							console.error("Error creating category:", response.statusText);
							// Display an error message to the user
						}
					});
			});
		});
	</script>
}
