@{
	ViewData["Title"] = "Current Tasks";
}

<style>

	#feedback-page {
		text-align: center;
	}

	#form-main {
		width: 100%;
		float: left;
		padding-top: 0px;
	}



	.feedback-input {
		color: #3c3c3c;
		font-family: Helvetica, Arial, sans-serif;
		font-weight: 500;
		font-size: 18px;
		border-radius: 0;
		line-height: 22px;
		background-color: #fbfbfb;
		padding: 13px 13px 13px 54px;
		margin-bottom: 10px;
		width: 100%;
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		-ms-box-sizing: border-box;
		box-sizing: border-box;
		border: 3px solid rgba(0,0,0,0);
	}

		.feedback-input:focus {
			background: #fff;
			box-shadow: 0;
			border: 3px solid #3498db;
			color: #3498db;
			outline: none;
			padding: 13px 13px 13px 54px;
		}

	.focused {
		color: #30aed6;
		border: #30aed6 solid 3px;
	}

	/* Icons ---------------------------------- */
	#name {
		background-image: url(http://rexkirby.com/kirbyandson/images/name.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

		#name:focus {
			background-image: url(http://rexkirby.com/kirbyandson/images/name.svg);
			background-size: 30px 30px;
			background-position: 8px 5px;
			background-position: 11px 8px;
			background-repeat: no-repeat;
		}

	#email {
		background-image: url(http://rexkirby.com/kirbyandson/images/email.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

		#email:focus {
			background-image: url(http://rexkirby.com/kirbyandson/images/email.svg);
			background-size: 30px 30px;
			background-position: 11px 8px;
			background-repeat: no-repeat;
		}

	#comment {
		background-image: url(http://rexkirby.com/kirbyandson/images/comment.svg);
		background-size: 30px 30px;
		background-position: 11px 8px;
		background-repeat: no-repeat;
	}

	textarea {
		width: 100%;
		height: 150px;
		line-height: 150%;
		resize: vertical;
	}

		input:hover, textarea:hover,
		input:focus, textarea:focus {
			background-color: white;
		}

	#button-blue {
		font-family: 'Montserrat', Arial, Helvetica, sans-serif;
		float: left;
		width: 100%;
		border: #fbfbfb solid 4px;
		cursor: pointer;
		background-color: #3498db;
		color: white;
		font-size: 24px;
		padding-top: 22px;
		padding-bottom: 22px;
		-webkit-transition: all 0.3s;
		-moz-transition: all 0.3s;
		transition: all 0.3s;
		margin-top: -4px;
		font-weight: 700;
	}

		#button-blue:hover {
			background-color: rgba(0,0,0,0);
			color: #0493bd;
		}

	.submit:hover {
		color: #3498db;
	}

	.ease {
		width: 0px;
		height: 74px;
		background-color: #fbfbfb;
		-webkit-transition: .3s ease;
		-moz-transition: .3s ease;
		-o-transition: .3s ease;
		-ms-transition: .3s ease;
		transition: .3s ease;
	}

	.submit:hover .ease {
		width: 100%;
		background-color: white;
	}

</style>

<div class="text-center">
	<h1 class="display-4 text-white text-primary">Task Management</h1>
	<h2 class="display-6 text-white text-opacity-50">Create Tasks</h2>
</div>

<div class="container mt-5">

	<div id="form-main">
		<div id="form-div">
			<form id="createTaskForm">
				<div class="form-group">
					<label for="itemName" class="text-white">Task Title:</label>
					<input type="text" class="form-control" id="itemName" name="itemName" placeholder="Enter Task Title" required>
				</div>
				<div class="form-group">
					<label for="itemDesc" class="text-white">Task Description:</label>
					<textarea class="form-control" id="itemDesc" name="itemDesc" placeholder="Enter Task Description" rows="3" required></textarea>
				</div>
				<div class="form-group">
					<label for="dueDate" class="text-white">Due Date:</label>
					<input type="date" class="form-control" id="dueDate" name="dueDate">
				</div>
				<div class="form-group">
					<label for="category" class="text-white">Category:</label>
					<select class="form-control" id="category" name="category" required>
						<option value="" disabled selected>Select a Category</option>
					</select>
				</div>
				<button type="submit" class="btn btn-primary align-self-center" id="addItemBtn">Add Task</button>
			</form>
		</div>
	</div>

	<br />
	<br />
	<br />
	<h2 class="display-6 text-white text-opacity-50">No Of Tasks</h2>
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th scope="col" class="text-white">ID</th>
				<th scope="col" class="text-white">Task Title</th>
				<th scope="col" class="text-white">Description</th>
				<th scope="col" class="text-white">Due Date</th>
				<th scope="col" class="text-white">Completed</th>
			</tr>
		</thead>
		<tbody id="tasksList">
		</tbody>
	</table>
</div>

@section Scripts {
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const categorySelect = document.getElementById('category');
			const tasksList = document.getElementById('tasksList');
			const createTaskForm = document.getElementById('createTaskForm');

			fetch('http://localhost:5194/api/Categories/GetCategories')
				.then(response => response.json())
				.then(data => {
					data.forEach(category => {
						const option = document.createElement('option');
						option.value = category.categoryId;
						option.text = category.categoryName;
						categorySelect.appendChild(option);
					});
				});

			fetch('http://localhost:5194/api/Tasks/GetTasks')
				.then(response => response.json())
				.then(data => {
					data.forEach(task => {
						const newRow = `<tr>
							  <td class='text-white'>${task.taskId}</td>
							  <td class='text-white'>${task.title}</td>
							  <td class='text-white'>${task.description}</td>
							  <td class='text-white'>${task.dueDate ? task.dueDate : ''}</td>
					  <td>
						<span class="badge bg-${task.completed ? 'success' : 'secondary'}">${task.completed ? 'Completed' : 'Pending'}</span>
					  </td>
					</tr>`;
						tasksList.innerHTML += newRow;
					});
				});

			createTaskForm.addEventListener('submit', (event) => {
				event.preventDefault(); // Prevent default form submission
				alert('aya idhar')
				const itemName = document.getElementById('itemName').value;
				const itemDesc = document.getElementById('itemDesc').value;
				const dueDate = document.getElementById('dueDate').value;
				const categoryId = document.getElementById('category').value;

				const taskData = {
					title: itemName,
					description: itemDesc,
					dueDate: dueDate,
					categoryId: categoryId,
				};

				// Send POST request to create the task
				fetch('http://localhost:5194/api/Tasks/PostTasks', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify(taskData)
				})
					.then(response => response.json())
					.then(data => {
						if (response.ok) {
							console.log("Task created successfully:", data);
							createTaskForm.reset(); // Clear form fields after successful submission
						} else {
							console.error("Error creating task:", response.statusText);
							// Display an error message to the user
						}
					});
			});
		});
	</script>
}